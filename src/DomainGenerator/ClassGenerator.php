<?php

declare(strict_types=1);

namespace ApiPlatform\SchemaGenerator\DomainGenerator;

use ApiPlatform\SchemaGenerator\DomainGenerator\CodeConfiguration\ClassConfiguration;
use Nette\PhpGenerator;

class ClassGenerator
{
    public function __construct(/* @todo: new NetteFactory */)
    {
        
    }

    public function generate(
        ClassConfiguration $config,
        array $classesConfig,
        array $propertiesConfig
    ) {
        $file = new PhpGenerator\PhpFile;
        $file->addComment('This file was auto-generated by the following class:');
        $file->addComment(__CLASS__);
        $file->setStrictTypes();

        $namespace = $file->addNamespace($config->namespace);
        $class = $namespace->addClass($config->name);
        $class
            ->setType($config->type)
            ->setFinal($config->final)
            ->setAbstract($config->abstract)
            ->setExtends(array_map(function ($uri) use ($classesConfig) {
                return $classesConfig[$uri]->namespace . '\\' . $classesConfig[$uri]->name;
            }, $config->extends))
            ->setImplements($config->implements)
            ->setTraits($config->traits)
            ->setConstants($config->consts)
            ->setProperties(array_map(function ($uri) use ($propertiesConfig) {
                $property = new PhpGenerator\Property($propertiesConfig[$uri]->name);
                foreach ($propertiesConfig[$uri]->comments as $comment) {
                    $property->addComment($comment);
                }
                return $property;
            }, $config->properties))
            ->setMethods($config->methods)
        ;
        

        echo (new PhpGenerator\PsrPrinter)->printFile($file);
    }
}